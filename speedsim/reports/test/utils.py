import re

from lxml import etree
from lxml.html.diff import htmldiff


def _html_fixup(doc):
    """
    Replace known IDs in the HTML with dummy content for easier comparison.
    :param doc: HTML document content (string)
    """
    lines = doc.split('\n')
    result = []
    for line in lines:
        # replace unique IDs generated by bokeh
        if 'href="#_tag_' in line:
            continue
        elif 'class="bk-root"' in line:
            match = re.match('.*id="(.+)".*data-root-id="(.+)"', line)
            if match:
                id_ = match.group(1)
                line = line.replace(id_, '_bokeh_id_')
                root_id_ = match.group(2)
                line = line.replace(root_id_, '_bokeh_root_id_')
        elif 'var docs_json =' in line:
            match = re.match('.*var docs_json = (.+)', line)
            if match:
                docs_json = match[1]
                line = line.replace(docs_json, '_docs_json_')
        elif 'render_items =' in line:
            match = re.match('.*render_items = (.+)', line)
            if match:
                render_items = match[1]
                line = line.replace(render_items, '_render_items_')
        elif 'id="' in line:
            match = re.match('.*id="([^"]+)"', line)
            id_ = match[1]
            line = line.replace(id_, '_id_')
        elif '#T_' in line:
            match = re.match('.*(#T_[_0-9a-z]+)', line)
            if match:
                id_ = match[1]
                line = line.replace(id_, '#_table_id_')
        elif 'href="#' in line:
            # FIXME: single ID per line
            match = re.match('.*href="#([^"]+)"', line)
            if match:
                id_ = match[1]
                line = line.replace(id_, '#_id_')

        result.append(line)

    return '\n'.join(result)


def html_compare(doc1, doc2):
    """
    Compare two HTML strings. Returns True/False.
    """
    doc1 = _html_fixup(doc1)
    doc2 = _html_fixup(doc2)

    diff = htmldiff(doc1, doc2)
    if '<ins>' in diff or '<del>' in diff:
        html_tree = etree.HTML(diff)
        print('DIFF:')
        for node in html_tree.iter():
            if node.tag == 'ins' or node.tag == 'del':
                print(etree.tostring(node, pretty_print=True).decode('utf-8'))
        return False

    return True


def html_file_compare(file1, file2):
    """
    Compare two HTML files
    """
    with open(file1) as file:
        doc1 = file.read()

    with open(file2) as file:
        doc2 = file.read()

    return html_compare(doc1, doc2)
